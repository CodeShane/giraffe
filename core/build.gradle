apply from: "../gradle/shared.gradle"

apply plugin: 'giraffe.system-test'
apply plugin: 'giraffe.system-test-files'

dependencies {
    api project(':giraffe-fs-base')
    api group: 'com.google.guava', name: 'guava', version: libVersions.guava
    api group: 'com.google.code.findbugs', name: 'jsr305', version: libVersions.jsr305
    api group: 'org.slf4j', name: 'slf4j-api', version: libVersions.slf4j

    testImplementation project(':giraffe-test-util')
    testImplementation group: 'org.mockito', name: 'mockito-core', version: libVersions.mockito
    systemTestImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: libVersions.hamcrest

    testRuntimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: libVersions.logback
}

// configure the systemTest sourceset and configurations
// requires creatorClass to be defined
systemTest {
    creatorClass = 'com.palantir.giraffe.command.test.creator.CreateTestFiles'
}

// the creator jar depends on script resources
creatorJar {
    from sourceSets.systemTest.output.resourcesDir
}

// systemTest requires main code (for ES definitions)
sourceSets.systemTest.compileClasspath += sourceSets.main.output
configurations {
    systemTestImplementation.extendsFrom implementation
}
artifacts {
    systemTest jar
}

// main tests require systemTest code (for local ES tests)
sourceSets.test.compileClasspath += sourceSets.systemTest.output
sourceSets.test.runtimeClasspath += sourceSets.systemTest.output

systemTestFiles {
    creators {
        exec {
            source project
        }
    }
}

test {
    // included in LocalExecutionSystemSuite
    exclude '**/LocalExecutionSystemConfigurationTest*'
}

jacocoCoverage {
    packageThreshold 0.45, 'com/palantir/giraffe'
}
